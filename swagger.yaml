---
swagger: "2.0"
info:
  description: API for laravel Crud
  version: 1.0.0
  title: Brisef Backend
  contact:
    email: aldo1400@gmail.com.pe
host: virtserver.swaggerhub.com
# basePath: /aldo1400/goplay/1.0.0

tags:
- name: users
  description: User module
- name: type-users
  description: Everything about type of users
- name: tipo cargas
  description: Everything about tipo de cargas
- name: cargos
  description: Everything about cargos
- name: cargas familiares
  description: Everything about cargas familiares
- name: colaboradores
  description: Everything about colaboradores
- name: cursos
  description: Everything about cursos
- name: departamentos
  description: Everything about departamentos
- name: estado civiles
  description: Everything about niveles estado civiles
- name: niveles educacion
  description: Everything about niveles educacion
  
schemes:
- https
paths:
  
  # ---------------------
  #   Cargas Familiares
  # ---------------------
  "/cargas-familiares/{id}":
    get:
      tags:
      - cargas familiares
      summary: Obtener una carga familiar
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/CargaFamiliarResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - cargas familiares
      summary: Editar una carga familiar
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Carga familiar ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CargaFamiliarUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - cargas familiares
      summary: Eliminar carga familiar
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Carga Familiar deleted 
        404:
          description: Route not found
        409:
          description: Departure has children  
          
  # ---------------------
  #   Cargos
  # ---------------------
  "/cargos":
    get:
      tags:
      - cargos
      summary: Obtener todos los cargos
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CargoResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - cargos
      summary: Añadir un cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CargoCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
  "/cargos/{id}":
    get:
      tags:
      - cargos
      summary: Obtener un cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/CargoResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - cargos
      summary: Editar nombre de un cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Cargo ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DepartamentoUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - cargos
      summary: Eliminar cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Cargo deleted 
        404:
          description: Route not found
        409:
          description: Departure has children      
  
  # ---------------------
  #   Colaboradores
  # ---------------------
  "/colaboradores":
    get:
      tags:
      - colaboradores
      summary: Obtener todos los colaboradores
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ColaboradorResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - colaboradores
      summary: Añadir un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ColaboradorCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/colaboradores/{id}/cargas-familiares":
    get:
      tags:
      - colaboradores
      summary: Obtener todos las cargas familiares de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CargaFamiliarResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - colaboradores
      summary: Crear una carga familiar a un determinado colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CargaFamiliarCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  # ---------------------
  #   Cursos
  # ---------------------
  "/cursos":
    get:
      tags:
      - cursos
      summary: Obtener todos los cursos
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CursoResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - cursos
      summary: Añadir un curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CursoCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
  "/cursos/{id}":
    get:
      tags:
      - cursos
      summary: Obtener un curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/CursoResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    put:
      tags:
      - cursos
      summary: Editar nombre de un curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Curso ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CursoUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - cursos
      summary: Eliminar curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Curso deleted 
        404:
          description: Route not found
        409:
          description: Departure has children   
         
  # ---------------------
  #   Departamentos
  # ---------------------
  "/departamentos":
    get:
      tags:
      - departamentos
      summary: Obtener todos los departamentos
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/DepartamentoResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - departamentos
      summary: Añadir un departamento
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/DepartamentoCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/departamentos/{id}":
    get:
      tags:
      - departamentos
      summary: Obtener un departamento
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/DepartamentoResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - departamentos
      summary: Editar nombre de un departamento
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Departamento ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/DepartamentoUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access   
    
    delete:
      tags:
      - departamentos
      summary: Eliminar departamento
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Departure deleted 
        404:
          description: Route not found
        409:
          description: Departure has children
  
  # ---------------------
  #   Estado civiles
  # ---------------------
  "/estado-civiles":
    get:
      tags:
      - estado civiles
      summary: Obtener todos los estados civiles
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/EstadoCivilResource'
        401:
          description: unauthenticated  
          
  # ---------------------
  #   Users
  # ---------------------
  
  "/logout":
    post:
      tags:
      - login
      summary: Close user session
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Cierre de sesión satisfactorio
        400:
          description: bad input parameter
        401:
          description: No autorizado
          
  "/login":
    post:
      tags:
      - users
      summary: User authentication
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        200:
          description: Loged succesfully
          schema:
            type: object
            properties:
              token:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ...PgNg
              token_type:
                type: string
                example: bearer
                default: bearer
              expires_in:
                type: string
                example: "86400"
                default: "86400"
        401:
          description: unauthenticated
   
  # ---------------------
  #   Niveles educacion
  # ---------------------
  "/niveles-educacion":
    get:
      tags:
      - niveles educacion
      summary: Obtener todos los niveles de educacion
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/NivelEducacionResource'
        401:
          description: unauthenticated  
          
  # ---------------------
  #   Tipos carga
  # ---------------------
  "/tipos-carga":
    get:
      tags:
      - tipos carga
      summary: Obtener todos los tipos de carga
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TipoCargaResource'
        401:
          description: unauthenticated 
  
  
  "/user":
    get:
      tags:
      - users
      summary: Get data of current user logged
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            $ref: '#/definitions/UserResource'
        401:
          description: unauthenticated


  "/users":
    get:
      tags:
      - users
      summary: Get all users
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResource'
        401:
          description: unauthenticated

    post:
      tags:
      - users
      summary: Add a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/UserCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
    delete:
      tags:
      - users
      summary: Delete multiples users
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          type: array
          items:
            type: integer
      responses:
        200:
          description: Users deleted 
        404:
          description: Route not found
        
  "/users/{id}":
    get:
      tags:
      - users
      summary: Get a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/UserResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    put:
      tags:
      - users
      summary: Edit information of a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: User ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access      
  
  # ---------------------
  #   Type Users
  # ---------------------
  "/type-users":
    get:
      tags:
      - type-users
      summary: Get all type of users
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TypeUserResource'
        401:
          description: unauthenticated       
         
definitions:
  
  CargaFamiliarResource:
    type: object
    properties:
      id:
        type: integer
      rut:
        type: string
      nombres:
        type: string
      apellidos:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipoCarga:
        $ref: '#/definitions/TipoCargaResource'
  
  CargaFamiliarCreateRequest:
    type: object
    properties:
      rut:
        type: string
      nombres:
        type: string
      apellidos:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipo_carga_id:
        type: integer
      
  CargaFamiliarUpdateRequest:
    type: object
    properties:
      nombres:
        type: string
      apellidos:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipo_carga_id:
        type: integer
  
  CargoResource:
    type: object
    properties:
      id:
        type: integer
      nivel_jerarquico:
        type: string
        enum: [
          'Estratégico Táctico',
          'Operativo Supervisión',
          'Táctico Operativo',
          'Táctico',
          'Ejecución'
          ]
      nombre:
        type: string
      supervisor_id:
        type: integer
  
  CargoCreateRequest:
    type: object
    properties:
      nivel_jerarquico:
        type: string
        enum: [
          'Estratégico Táctico',
          'Operativo Supervisión',
          'Táctico Operativo',
          'Táctico',
          'Ejecución'
          ]
      nombre:
        type: string
      supervisor_id:
        type: integer
  
  CargoUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
  
  
  ColaboradorCreateRequest:
    type: object
    properties:
      rut:
        type: string
      usuario:
        type: string
      password:
        type: string
      primer_nombre:
        type: string
      segundo_nombre:
        type: string
      apellido_paterno:
        type: string
      apellido_materno:
        type: string
      sexo:
        type: string
      nacionalidad:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      edad:
        type: integer
      email:
        type: string
        format: email
      domicilio:
        type: string
      licencia_b:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_b:
        type: string
        format: date
      licencia_d:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_d:
        type: string
        format: date
      carnet_portuario:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_carnet_portuario:
        type: string
        format: date
      talla_calzado:
        type: string
      talla_chaleco:
        type: string
      talla_polera:
        type: string
      talla_pantalon:
        type: string
      fecha_ingreso:
        type: string
        format: date
      telefono:
        type: string
      celular:
        type: string
      anexo:
        type: string
      contacto_emergencia_nombre:
        type: string
      contacto_emergencia_telefono:
        type: string
      estado:
        type: string
      fecha_inactividad:
        type: string
        format: date
      nivel_educacion_id:
        type: integer
      estado_civil_id:
        type: integer
      imagen:
        type: string
  
  ColaboradorResource:
    type: object
    properties:
      id:
        type: integer
      rut:
        type: string
      usuario:
        type: string
      primer_nombre:
        type: string
      segundo_nombre:
        type: string
      apellido_paterno:
        type: string
      apellido_materno:
        type: string
      sexo:
        type: string
      nacionalidad:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      edad:
        type: integer
      email:
        type: string
        format: email
      domicilio:
        type: string
      licencia_b:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_b:
        type: string
        format: date
      licencia_d:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_d:
        type: string
        format: date
      carnet_portuario:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_carnet_portuario:
        type: string
        format: date
      talla_calzado:
        type: string
      talla_chaleco:
        type: string
      talla_polera:
        type: string
      talla_pantalon:
        type: string
      fecha_ingreso:
        type: string
        format: date
      telefono:
        type: string
      celular:
        type: string
      anexo:
        type: string
      contacto_emergencia_nombre:
        type: string
      contacto_emergencia_telefono:
        type: string
      estado:
        type: string
      fecha_inactividad:
        type: string
        format: date
      nivelEducacion:
        $ref: "#/definitions/NivelEducacionResource" 
      estadoCivil:
        $ref: "#/definitions/EstadoCivilResource" 
  
  CursoResource:
    type: object
    properties:
      id:
        type: integer
      nombre:
        type: string
      tipo:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]
  
  CursoCreateRequest:
    type: object
    properties:
      nombre:
        type: string
      tipo:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]   
  
  CursoUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
      tipo:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]   
    
  DepartamentoCreateRequest:
    type: object
    properties:
      tipo:
        type: string
        enum: [
          'Gerencia General',
          'Gerencia',
          'Subgerencia',
          'Área',
          'Subarea'
          ]
      nombre:
        type: string
      padre_id:
        type: integer
  
  DepartamentoUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
  
  DepartamentoResource:
    type: object
    properties:
      tipo:
        type: string
        enum: [
          'Gerencia General',
          'Gerencia',
          'Subgerencia',
          'Área',
          'Subarea'
          ]
      nombre:
        type: string
      padre_id:
        type: integer
  
  EstadoCivilResource:
    type: object
    properties:
      id:
        type: integer
      tipo:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]
    
  LoginRequest:
    type: object
    properties:
      username:
        type: string
        format: email
      password:
        type: string
        
  EmailRequest:
    type: object
    properties:
      email:
        type: string
        format: email
  
  NivelEducacionResource:
    type: object
    properties:
      id:
        type: integer
      nivel_tipo:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  PasswordResetRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
      password_confirmation:
        type: string
      token: 
        type: string
  
  UserResource:
    type: object
    properties:
      id:
        type: number
      email:
        type: string
        format: email
      name:
        type: string
      typeUser:
        $ref: "#/definitions/TypeUserResource"        
  
  TypeUserResource:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      code:
        type: string
  
  TipoCargaResource:
    type: object
    properties:
      id:
        type: string
      tipo:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  UserCreateRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
      name:
        type: string
      type_user_id:
        type: integer
        
  UserUpdateRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      name:
        type: string
      type_user_id:
        type: integer
      
# Added by API Auto Mocking Plugin
# basePath: /aldo1400/goplay/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /inventory5/Project/1.0.0
# Added by API Auto Mocking Plugin
basePath: /inventory5/botica/1.0.0