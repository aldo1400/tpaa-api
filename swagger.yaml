---
swagger: "2.0"
info:
  description: API for laravel Crud
  version: 1.0.0
  title: Brisef Backend
  contact:
    email: aldo1400@gmail.com.pe
host: virtserver.swaggerhub.com
# basePath: /aldo1400/goplay/1.0.0

tags:
- name: administradores
  description: Administrador module
- name: users
  description: User module
- name: type-users
  description: Everything about type of users
- name: capacitaciones(curso-colaborador)
  description: Everything about capacitaciones
- name: cargos
  description: Everything about cargos
- name: cargas familiares
  description: Everything about cargas familiares
- name: colaboradores
  description: Everything about colaboradores
- name: comentarios
  description: Everything about comentarios
- name: cursos
  description: Everything about cursos
- name: areas
  description: Everything about areas
- name: estado civiles
  description: Everything about niveles estado civiles
- name: movilidades
  description: Everything about movilidades
- name: niveles educacion
  description: Everything about niveles educacion
- name: niveles jerarquico
  description: Everything about niveles jerarquico
- name: notificaciones
  description: Everything about notificaciones
- name: tags
  description: Everything about tags
- name: tipos carga
  description: Everything about tipo de cargas
- name: tipos area
  description: Everything about tipo de area
- name: tipo comentarios
  description: Everything about tipo comentarios
- name: tipo cursos
  description: Everything about tipo cursos
- name: tipo movilidades
  description: Everything about tipo de movilidades

schemes:
- https
paths:
  
  # ---------------------
  #   Administradores
  # ---------------------
  "/administradores":
    get:
      tags:
      - administradores
      summary: Obtener todos los administradores
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/AdministradorResource'
        401:
          description: unauthenticated

    post:
      tags:
      - administradores
      summary: Add a administrador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AdministradorCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
    put:
      tags:
      - administradores
      summary: Editar el perfil del administrador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProfileUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access 
   
  "/administradores/{id}":
    get:
      tags:
      - administradores
      summary: Obtener un administrador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/AdministradorResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    put:
      tags:
      - administradores
      summary: Editar los datos de un administrador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Administrador ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AdministradorUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access 
         
  # ---------------------
  #   Cargas Familiares
  # ---------------------
  "/cargas-familiares/{id}":
    get:
      tags:
      - cargas familiares
      summary: Obtener una carga familiar
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/CargaFamiliarResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - cargas familiares
      summary: Editar una carga familiar
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Carga familiar ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CargaFamiliarUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - cargas familiares
      summary: Eliminar carga familiar
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Carga Familiar deleted 
        404:
          description: Route not found
        409:
          description: Departure has children  
  
  # ---------------------
  #   Capacitaciones - Curso-Colaborador
  # ---------------------
  "/capacitaciones/{id}/generar-archivo":
    get:
      tags:
      - capacitaciones(curso-colaborador)
      summary: Obtener todos las capacitaciones de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Archivo generado exitosamente
        401:
          description: unauthenticated 
          
  "/colaboradores/{id}/capacitaciones":
    get:
      tags:
      - capacitaciones(curso-colaborador)
      summary: Obtener todos las capacitaciones de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CapacitacionResource'
        401:
          description: unauthenticated 

    post:
      tags:
      - capacitaciones(curso-colaborador)
      summary: Crear una capacitacion
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CapacitacionFromColaboradorCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
          
  
  "/cursos/{id}/capacitaciones":
    post:
      tags:
      - capacitaciones(curso-colaborador)
      summary: Crear una capacitacion
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CapacitacionCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  
  "/capacitaciones/{id}":
    delete:
      tags:
      - capacitaciones(curso-colaborador)
      summary: Eliminar capacitacion
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Cargo deleted 
        404:
          description: Route not found
        409:
          description: Departure has children
          
  # ---------------------
  #   Cargos
  # ---------------------
  "/cargos":
    get:
      tags:
      - cargos
      summary: Obtener todos los cargos
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CargoResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - cargos
      summary: AÃ±adir un cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CargoCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
  "/cargos/{id}":
    get:
      tags:
      - cargos
      summary: Obtener un cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/CargoResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - cargos
      summary: Editar nombre de un cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Cargo ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CargoUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - cargos
      summary: Eliminar cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Cargo deleted 
        404:
          description: Route not found
        409:
          description: Departure has children      
  
  "/cargos/{id}/relacionados":
    get:
      tags:
      - cargos
      summary: Obtener las areas relacionadas con el cargo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Cargo ID
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/AreaResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
  
  "/cargos/{id}/generar-archivos":
    get:
      tags:
      - cargos
      summary: Genera el organigrama y descriptor de un cargo a partir del blob
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Archivo generado exitosamente
        401:
          description: unauthenticated 
          
  # ---------------------
  #   Colaboradores
  # ---------------------
  "/colaboradores":
    get:
      tags:
      - colaboradores
      summary: Obtener todos los colaboradores
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: estado
        type: boolean
        description: Obtener cursos inactivos o activos
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ColaboradorResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - colaboradores
      summary: AÃ±adir un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ColaboradorCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/colaboradores/validacion-rut":
    get:
      tags:
      - colaboradores
      summary: Validar RUT
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: rut
        type: string
      responses:
        200:
          description: Rut valido
        409:
          description: RUT INVALIDO
  
  "/colaboradores/{id}":
    patch:
      tags:
      - colaboradores
      summary: Editar datos de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Colaborador ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ColaboradorUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
  
  "/colaboradores/{id}/imagen": 
    delete:
      tags:
      - colaboradores
      summary: Eliminar imagen del colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Image deleted 
        404:
          description: Route not found
        409:
          description: Departure has children 
          
          
  "/colaboradores/{id}/cargas-familiares":
    get:
      tags:
      - colaboradores
      summary: Obtener todos las cargas familiares de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CargaFamiliarResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - colaboradores
      summary: Crear una carga familiar a un determinado colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CargaFamiliarCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/colaboradores/{id}/generar-imagen":
    get:
      tags:
      - colaboradores
      summary: Genera la imagen del colaborador a partir del blob
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Archivo generado exitosamente
        401:
          description: unauthenticated 
          
  # ---------------------
  #   Comentarios
  # ---------------------
  "/comentarios":
    get:
      tags:
      - comentarios
      summary: Obtener todos los comentarios
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ComentarioResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - comentarios
      summary: AÃ±adir un comentario
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ComentarioCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/comentarios/{id}":
    get:
      tags:
      - comentarios
      summary: Obtener un comentario
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Comentario ID
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/ComentarioResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    put:
      tags:
      - comentarios
      summary: Editar nombre de un comentario
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Comentario ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ComentarioUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - comentarios
      summary: Eliminar comentario
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Comentario deleted 
        404:
          description: Route not found
        409:
          description: Departure has children        
  
  # ---------------------
  #   Cursos
  # ---------------------
  "/cursos":
    get:
      tags:
      - cursos
      summary: Obtener todos los cursos
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: estado
        type: boolean
        description: Obtener cursos inactivos o activos
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/CursoResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - cursos
      summary: AÃ±adir un curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/CursoCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
  "/cursos/{id}":
    get:
      tags:
      - cursos
      summary: Obtener un curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/CursoResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    put:
      tags:
      - cursos
      summary: Editar nombre de un curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Curso ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CursoUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - cursos
      summary: Eliminar curso
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Curso deleted 
        404:
          description: Route not found
        409:
          description: Departure has children   
         
  # ---------------------
  #   Areas
  # ---------------------
  "/areas":
    get:
      tags:
      - areas
      summary: Obtener todos las areas
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: estado
        type: boolean
        description: Obtener cursos inactivos o activos
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/AreaResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - areas
      summary: AÃ±adir un area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/AreaCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/areas/{id}":
    get:
      tags:
      - areas
      summary: Obtener un area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/AreaResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - areas
      summary: Editar nombre de un area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Area ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AreaUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access   
    
    delete:
      tags:
      - areas
      summary: Eliminar areaa
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Area deleted 
        404:
          description: Route not found
        409:
          description: Departure has children
  
  "/areas/{id}/relacionados":
    get:
      tags:
      - areas
      summary: Obtener las areas relacionadas con el area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Area ID
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/AreaResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
  
  # ---------------------
  #   Estado civiles
  # ---------------------
  "/estado-civiles":
    get:
      tags:
      - estado civiles
      summary: Obtener todos los estados civiles
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/EstadoCivilResource'
        401:
          description: unauthenticated  
          
  # ---------------------
  #   Users
  # ---------------------
  
  "/logout":
    post:
      tags:
      - login
      summary: Close user session
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: Cierre de sesiÃ³n satisfactorio
        400:
          description: bad input parameter
        401:
          description: No autorizado
          
  "/login":
    post:
      tags:
      - administradores
      summary: User authentication
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/LoginRequest'
      responses:
        200:
          description: Loged succesfully
          schema:
            type: object
            properties:
              token:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ...PgNg
              token_type:
                type: string
                example: bearer
                default: bearer
              expires_in:
                type: string
                example: "86400"
                default: "86400"
        401:
          description: unauthenticated
   
  # ---------------------
  #   Niveles educacion
  # ---------------------
  "/niveles-educacion":
    get:
      tags:
      - niveles educacion
      summary: Obtener todos los niveles de educacion
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/NivelEducacionResource'
        401:
          description: unauthenticated  
  
  # ---------------------
  #   Niveles jerarquico
  # ---------------------
  "/niveles-jerarquico":
    get:
      tags:
      - niveles jerarquico
      summary: Obtener todos los niveles jerarquico
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/NivelJerarquicoResource'
        401:
          description: unauthenticated  
  
    post:
      tags:
      - niveles jerarquico
      summary: AÃ±adir un nivel jerarquico
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/NivelJerarquicoCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/niveles-jerarquico/{id}":
    get:
      tags:
      - niveles jerarquico
      summary: Obtener un nivel jerarquico
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/NivelJerarquicoResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    put:
      tags:
      - niveles jerarquico
      summary: Editar nombre de un nivel jerarquico
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Nivel Jerarquico ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/NivelJerarquicoUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access   
    
    delete:
      tags:
      - niveles jerarquico
      summary: Eliminar nivel jerarquico
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Nivel jerarquico deleted 
        404:
          description: Route not found
        409:
          description: Departure has children
  
  "/movilidades/{id}":
    get:
      tags:
      - movilidades
      summary: Obtener una movilidad en especifico
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Movilidad ID
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/MovilidadResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    put:
      tags:
      - movilidades
      summary: Editar datos de una movilidad
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Movilidad ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/MovilidadCreateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access
    
  
          
  "/colaboradores/{id}/movilidades":
    get:
      tags:
      - movilidades
      summary: Obtener las movilidades de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: colaborador ID
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/MovilidadResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
          
    post:
      tags:
      - movilidades
      summary: Agregar una nueva movilidad a un determinado colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - in: body
        name: body
        schema:
          $ref: '#/definitions/MovilidadCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
    delete:
      tags:
      - movilidades
      summary: Eliminar la movilidad actual del colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Movilidad deleted 
        404:
          description: Route not found
        409:
          description: Departure has children 
  
  # ---------------------
  #   Notificaciones
  # ---------------------
  "/notificaciones":
    get:
      tags:
      - notificaciones
      summary: Obtener todas las notificaciones
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificacionResource'
        401:
          description: unauthenticated
  
  "/colaboradores/{id}/notificaciones":
    get:
      tags:
      - notificaciones
      summary: Obtener las notificaciones de un colaborador
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: colaborador ID
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/NotificacionResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
         
  # ---------------------
  #   Tags
  # ---------------------
  "/tags":
    get:
      tags:
      - tags
      summary: Get all tags
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TagResource'
        401:
          description: unauthenticated
    
    post:
      tags:
      - tags
      summary: AÃ±adir un tag
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/TagCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
  
  "/tags/{id}":
    get:
      tags:
      - tags
      summary: Obtener un tag
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/TagResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
        
    put:
      tags:
      - tags
      summary: Editar tag
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: tag ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TagUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access
    
    delete:
      tags:
      - tags
      summary: Eliminar un tag
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Tag deleted 
        404:
          description: Route not found
        409:
          description: Departure has children     
  
  # ---------------------
  #   Tipos Area
  # ---------------------
  "/tipos-area":
    get:
      tags:
      - tipos area
      summary: Obtener todos los tipos area
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TipoAreaResource'
        401:
          description: unauthenticated  
    
    post:
      tags:
      - tipos area
      summary: AÃ±adir un tipo de area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/TipoAreaCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
  "/tipos-area/{id}":
    get:
      tags:
      - tipos area
      summary: Obtener un tipo de area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/TipoAreaResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    
    patch:
      tags:
      - tipos area
      summary: Editar nombre de un tipo de area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Tipo Area ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TipoAreaUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access  
    
    delete:
      tags:
      - tipos area
      summary: Eliminar tipo de area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Tipo de area deleted 
        404:
          description: Route not found
        409:
          description: Departure has children   
    
  # ---------------------
  #   Tipos carga
  # ---------------------
  "/tipo-cargas":
    get:
      tags:
      - tipos carga
      summary: Obtener todos los tipos de carga
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TipoCargaResource'
        401:
          description: unauthenticated 
  
  # ---------------------
  #   Tipo Comentarios
  # ---------------------
  "/tipo-comentarios":
    get:
      tags:
      - tipo comentarios
      summary: Obtener todos los tipos de comentarios
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TipoComentarioResource'
        401:
          description: unauthenticated 
  
  # ---------------------
  #   Tipo Cursos
  # ---------------------
  "/tipo-cursos":
    get:
      tags:
      - tipo cursos
      summary: Obtener todos los tipos de comentarios
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TipoCursoResource'
        401:
          description: unauthenticated 
  
  # ---------------------
  #   Tipo movilidades
  # ---------------------
  "/tipo-movilidades":
    get:
      tags:
      - tipo movilidades
      summary: Obtener todos los tipos de movilidades
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TipoMovilidadResource'
        401:
          description: unauthenticated
  
  "/user":
    get:
      tags:
      - users
      summary: Get data of current user logged
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            $ref: '#/definitions/UserResource'
        401:
          description: unauthenticated


  "/users":
    get:
      tags:
      - users
      summary: Get all users
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResource'
        401:
          description: unauthenticated

    post:
      tags:
      - users
      summary: Add a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/UserCreateRequest'
      responses:
        201:
          description: Data was inserted succesfully
        400:
          description: Invalid input, object invalid
        401:
          description: Unauthenticated
        403:
          description: Forbidden access
    
    delete:
      tags:
      - users
      summary: Delete multiples users
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          type: array
          items:
            type: integer
      responses:
        200:
          description: Users deleted 
        404:
          description: Route not found
        
  "/users/{id}":
    get:
      tags:
      - users
      summary: Get a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Data retrieved successfully
          schema:
            $ref: '#/definitions/UserResource'
        404:
          description: Method or resource not found
        401:
          description: Unauthenticated
    put:
      tags:
      - users
      summary: Edit information of a user
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: User ID
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UserUpdateRequest'
      responses:
        200:
          description: Data modified succesfully
        401:
          description: Unauthenticated
        403:
          description: Forbidden Access      
  
  # ---------------------
  #   Type Users
  # ---------------------
  "/type-users":
    get:
      tags:
      - type-users
      summary: Get all type of users
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: Retrieved data succesfully
          schema:
            type: array
            items:
              $ref: '#/definitions/TypeUserResource'
        401:
          description: unauthenticated       
         
definitions:
  
  CapacitacionResource:
    type: object
    properties:
      id:
        type: integer
      diploma_url:
        type: string
      diploma_path:
        type: string
      diploma:
        type: string
      curso_id:
        type: integer
      colaborador_id:
        type: integer
  
  CapacitacionCreateRequest:
    type: object
    properties:
      colaboradores:
        type: array
        items:
          type: integer
  
  CapacitacionFromColaboradorCreateRequest:
    type: object
    properties:
      curso_id:
        type: integer
      diploma:
        type: string
      
   
  CargaFamiliarResource:
    type: object
    properties:
      id:
        type: integer
      rut:
        type: string
      nombres:
        type: string
      apellidos:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipoCarga:
        $ref: '#/definitions/TipoCargaResource'
  
  CargaFamiliarCreateRequest:
    type: object
    properties:
      rut:
        type: string
      nombres:
        type: string
      apellidos:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipo_carga_id:
        type: integer
      
  CargaFamiliarUpdateRequest:
    type: object
    properties:
      nombres:
        type: string
      apellidos:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipo_carga_id:
        type: integer
  
  CargoResource:
    type: object
    properties:
      id:
        type: integer
      nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
      supervisor_id:
        type: integer
      nivelJerarquico:
        $ref: "#/definitions/NivelJerarquicoResource"
      area:
        $ref: "#/definitions/AreaResource"
      descriptor_url:
        type: string
      descriptor_path:
        type: string
      organigrama_url:
        type: string
      organigrama_path:
        type: string
      nombre_fantasia:
        type: string
      
  CargoCreateRequest:
    type: object
    properties:
      nombre:
        type: string
      supervisor_id:
        type: integer
      area_id:
        type: integer
      nivel_jerarquico_id:
        type: integer
      estado:
        type: string
        enum: [0,1]
      descriptor:
        type: string
      organigrama:
        type: string
      nombre_fantasia:
        type: string
  
  CargoUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
      supervisor_id:
        type: integer
      organigrama_url:
        type: string
      organigrama:
        type: string
      descriptor_url:
        type: string
      descriptor:
        type: string
      estado:
        type: string
        enum: [0,1]
      area_id:
        type: integer
      nivel_jerarquico_id:
        type: integer
      nombre_fantasia:
        type: string
  
  ColaboradorCreateRequest:
    type: object
    properties:
      rut:
        type: string
      usuario:
        type: string
      password:
        type: string
      primer_nombre:
        type: string
      segundo_nombre:
        type: string
      apellido_paterno:
        type: string
      apellido_materno:
        type: string
      sexo:
        type: string
      nacionalidad:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      edad:
        type: integer
      email:
        type: string
        format: email
      domicilio:
        type: string
      licencia_b:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_b:
        type: string
        format: date
      licencia_d:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_d:
        type: string
        format: date
      carnet_portuario:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_carnet_portuario:
        type: string
        format: date
      talla_calzado:
        type: string
      talla_chaleco:
        type: string
      talla_polera:
        type: string
      talla_pantalon:
        type: string
      fecha_ingreso:
        type: string
        format: date
      telefono:
        type: string
      celular:
        type: string
      anexo:
        type: string
      contacto_emergencia_nombre:
        type: string
      contacto_emergencia_telefono:
        type: string
      estado:
        type: string
      fecha_inactividad:
        type: string
        format: date
      nivel_educacion_id:
        type: integer
      estado_civil_id:
        type: integer
      imagen:
        type: string
      tags:
        type: array
        items:
          type: integer
      cargo_id:
        type: integer
      fecha_inicio:
        type: string
        format: date
      credencial_vigilante:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_credencial_vigilante:
        type: string
        format: date
  
  ColaboradorUpdateRequest:
    type: object
    properties:
      usuario:
        type: string
      primer_nombre:
        type: string
      segundo_nombre:
        type: string
      apellido_paterno:
        type: string
      apellido_materno:
        type: string
      sexo:
        type: string
      nacionalidad:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      edad:
        type: integer
      email:
        type: string
        format: email
      domicilio:
        type: string
      licencia_b:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_b:
        type: string
        format: date
      licencia_d:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_d:
        type: string
        format: date
      carnet_portuario:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_carnet_portuario:
        type: string
        format: date
      talla_calzado:
        type: string
      talla_chaleco:
        type: string
      talla_polera:
        type: string
      talla_pantalon:
        type: string
      fecha_ingreso:
        type: string
        format: date
      telefono:
        type: string
      celular:
        type: string
      anexo:
        type: string
      contacto_emergencia_nombre:
        type: string
      contacto_emergencia_telefono:
        type: string
      nivel_educacion_id:
        type: integer
      estado_civil_id:
        type: integer
      imagen:
        type: string
      tags:
        type: array
        items:
          type: integer
      credencial_vigilante:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_credencial_vigilante:
        type: string
        format: date
        
  ColaboradorResource:
    type: object
    properties:
      id:
        type: integer
      rut:
        type: string
      usuario:
        type: string
      primer_nombre:
        type: string
      segundo_nombre:
        type: string
      apellido_paterno:
        type: string
      apellido_materno:
        type: string
      sexo:
        type: string
      nacionalidad:
        type: string
      fecha_nacimiento:
        type: string
        format: date
      edad:
        type: integer
      edad_colaborador:
        type: string
      email:
        type: string
        format: email
      domicilio:
        type: string
      licencia_b:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_b:
        type: string
        format: date
      licencia_d:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_licencia_d:
        type: string
        format: date
      carnet_portuario:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_carnet_portuario:
        type: string
        format: date
      talla_calzado:
        type: string
      talla_chaleco:
        type: string
      talla_polera:
        type: string
      talla_pantalon:
        type: string
      fecha_ingreso:
        type: string
        format: date
      telefono:
        type: string
      celular:
        type: string
      anexo:
        type: string
      contacto_emergencia_nombre:
        type: string
      contacto_emergencia_telefono:
        type: string
      estado:
        type: string
      fecha_inactividad:
        type: string
        format: date
      nivelEducacion:
        $ref: "#/definitions/NivelEducacionResource" 
      estadoCivil:
        $ref: "#/definitions/EstadoCivilResource" 
      cargoActual:
        $ref: "#/definitions/CargoResource"
      credencial_vigilante:
        type: string
        enum: [
          'SI', 
          'NO',
          'N/A'
          ]
      vencimiento_credencial_vigilante:
        type: string
        format: date
      imagen_url:
        type: string
  
  ComentarioResource:
    type: object
    properties:
      id:
        type: integer
      texto_libre:
        type: string
      publico:
        type: string
        enum: [0,1]
      fecha:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipoComentario:
        $ref: "#/definitions/TipoComentarioResource"
      positivo:
        type: string
        enum: [0,1]
  
  ComentarioCreateRequest:
    type: object
    properties:
      texto_libre:
        type: string
      publico:
        type: string
        enum: [0,1]
      fecha:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipo_comentario_id:
        type: integer
      colaborador_id:
        type: integer
      colaborador_autor_id:
        type: integer
      positivo:
        type: string
        enum: [0,1]
      
  ComentarioUpdateRequest:
    type: object
    properties:
      texto_libre:
        type: string
      publico:
        type: string
        enum: [0,1]
      fecha:
        type: string
        format: date
      estado:
        type: string
        enum: [0,1]
      tipo_comentario_id:
        type: integer
      colaborador_id:
        type: integer
      colaborador_autor_id:
        type: integer
      positivo:
        type: string
        enum: [0,1]
  
  TipoComentarioResource:
    type: object
    properties:
      id:
        type: integer
      tipo:
        type: string
      estado:
        type: string
  
  TipoCursoResource:
    type: object
    properties:
      id:
        type: integer
      categoria:
        type: string
  
  CursoResource:
    type: object
    properties:
      id:
        type: integer
      nombre:
        type: string
      titulo:
        type: string
      realizado:
        type: string
      fecha_inicio:
        type: string
        format: date
      fecha_termino:
        type: string
        format: date
      anio:
        type: string
      interno:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]
      tipoCurso:
        $ref: "#/definitions/TipoCursoResource"  
  
  CursoCreateRequest:
    type: object
    properties:
      nombre:
        type: string
      titulo:
        type: string
      realizado:
        type: string
      fecha_inicio:
        type: string
        format: date
      fecha_termino:
        type: string
        format: date
      anio:
        type: string
      interno:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]
      tipo_curso_id:
        type: integer
  
  CursoUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
      titulo:
        type: string
      realizado:
        type: string
      fecha_inicio:
        type: string
        format: date
      fecha_termino:
        type: string
        format: date
      anio:
        type: string
      interno:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]
      tipo_curso_id:
        type: integer 
    
  AreaCreateRequest:
    type: object
    properties:
      nombre:
        type: string
      padre_id:
        type: integer
      estado:
        type: boolean
      tipo_area_id:
        type: integer
  
  AreaUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
      padre_id:
        type: integer
      estado:
        type: boolean
      tipo_area_id:
        type: integer
  
  AreaResource:
    type: object
    properties:
      nombre:
        type: string
      padre_id:
        type: integer
      estado:
        type: boolean
      tipoArea:  
        $ref: "#/definitions/TipoAreaResource"  
  
  NotificacionResource:
    type: object
    properties:
      id:
        type: integer
      tipo:
        type: string
      mensaje:
        type: string
      colaborador:  
        $ref: "#/definitions/ColaboradorResource"  
  
  MovilidadResource:
    type: object
    properties:
      id:
        type: string
      fecha_termino:
        type: string
        format: date
      fecha_inicio:
        type: string
        format: date
      observaciones:
        type: string
      estado:
        type: string
      cargo_id:
        type: integer
      cargo_nombre:
        type: string
      colaborador_id:
        type: integer
      tipoMovilidad:
        $ref: "#/definitions/TipoMovilidadResource" 
      
  MovilidadCreateRequest:
    type: object
    properties:
      fecha_termino:
        type: string
        format: date
      fecha_inicio:
        type: string
        format: date
      tipo_movilidad_id:
        type: integer
      observaciones:
        type: string
      cargo_id:
        type: integer
  
  MovilidadUpdateRequest:
    type: object
    properties:
      fecha_termino:
        type: string
        format: date
      fecha_inicio:
        type: string
        format: date
      observaciones:
        type: string
      cargo_id:
        type: integer
  
  TipoAreaResource:
    type: object
    properties:
      id:
        type: integer
      tipo_nombre:
        type: string
      nivel:
        type: integer
      estado:
        type: boolean
  
  TipoAreaCreateRequest:
    type: object
    properties:
      tipo_nombre:
        type: string
      estado:
        type: boolean
  
  TipoAreaUpdateRequest:
    type: object
    properties:
      tipo_nombre:
        type: string
      estado:
        type: boolean
  
  EstadoCivilResource:
    type: object
    properties:
      id:
        type: integer
      tipo:
        type: string
        enum: [0,1]
      estado:
        type: string
        enum: [0,1]
    
  LoginRequest:
    type: object
    properties:
      username:
        type: string
        format: email
      password:
        type: string
        
  EmailRequest:
    type: object
    properties:
      email:
        type: string
        format: email
  
  NivelEducacionResource:
    type: object
    properties:
      id:
        type: integer
      nivel_tipo:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  NivelJerarquicoResource:
    type: object
    properties:
      id:
        type: integer
      nivel_nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  NivelJerarquicoCreateRequest:
    type: object
    properties:
      nivel_nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  NivelJerarquicoUpdateRequest:
    type: object
    properties:
      nivel_nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  PasswordResetRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
      password_confirmation:
        type: string
      token: 
        type: string
  
  UserResource:
    type: object
    properties:
      id:
        type: number
      email:
        type: string
        format: email
      name:
        type: string
      typeUser:
        $ref: "#/definitions/TypeUserResource"    
    
  
  AdministradorResource:
    type: object
    properties:
      id:
        type: number
      username:
        type: string
      nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  TagResource:
    type: object
    properties:
      id:
        type: string
      nombre:
        type: string
      descripcion:
        type: string
      permisos:
        type: string
      estado:
        type: string
        enum: [0,1]
      tipo:
        type: string
        enum: [
          'POSITIVO',
          'NEGATIVO'
          ]
        
  TagCreateRequest:
    type: object
    properties:
      nombre:
        type: string
      descripcion:
        type: string
      estado:
        type: string
        enum: [0,1]
      tipo:
        type: string
        enum: [
          'POSITIVO',
          'NEGATIVO'
          ]
          
  TagUpdateRequest:
    type: object
    properties:
      nombre:
        type: string
      descripcion:
        type: string
      estado:
        type: string
        enum: [0,1]
      tipo:
        type: string
        enum: [
          'POSITIVO',
          'NEGATIVO'
          ]
  
  TypeUserResource:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      code:
        type: string
  
  TipoCargaResource:
    type: object
    properties:
      id:
        type: string
      tipo:
        type: string
      estado:
        type: string
        enum: [0,1]
        
  TipoMovilidadResource:
    type: object
    properties:
      id:
        type: string
      tipo:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  AdministradorCreateRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  AdministradorUpdateRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
  
  ProfileUpdateRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
      nombre:
        type: string
      estado:
        type: string
        enum: [0,1]
      
  UserCreateRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
      name:
        type: string
      type_user_id:
        type: integer
        
  UserUpdateRequest:
    type: object
    properties:
      email:
        type: string
        format: email
      name:
        type: string
      type_user_id:
        type: integer
      
# Added by API Auto Mocking Plugin
# basePath: /aldo1400/goplay/1.0.0
# Added by API Auto Mocking Plugin
# basePath: /inventory5/Project/1.0.0
# Added by API Auto Mocking Plugin
basePath: /inventory5/botica/1.0.0